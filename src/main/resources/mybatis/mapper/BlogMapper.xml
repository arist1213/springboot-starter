<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.model.dao.BlogMapper" >

    <resultMap id="blogResult" type="com.example.demo.model.vo.Blog">
        <id property="id" column="blog_id" />
        <result property="title" column="blog_title"/>
        <collection property="posts" ofType="com.example.demo.model.vo.Post">
            <id property="id" column="post_id"/>
            <result property="subject" column="post_subject"/>
            <result property="body" column="post_body"/>
        </collection>
    </resultMap>

    <select id="selectBlog" resultMap="blogResult">
        select
        B.id as blog_id,
        B.title as blog_title,
        P.id as post_id,
        P.subject as post_subject,
        P.body as post_body
        from Blog B
        left outer join Post P on B.id = P.blog_id
        where B.id = #{id}
    </select>

    <!-- 超复杂的 Result Map -->
    <resultMap id="detailedBlogResultMap" type="com.example.demo.model.vo.BlogDetails">
        <!--<constructor>-->
            <!--<idArg column="blog_id" javaType="int"/>-->
        <!--</constructor>-->
        <id property="id" column="blog_id" />
        <result property="title" column="blog_title"/>
        <association property="author" javaType="com.example.demo.model.vo.Author">
            <id property="id" column="author_id"/>
            <result property="username" column="author_username"/>
            <result property="email" column="author_email"/>
        </association>
        <collection property="posts" ofType="com.example.demo.model.vo.Post">
            <id property="id" column="post_id"/>
            <result property="subject" column="post_subject"/>
            <result property="body" column="post_body" jdbcType="VARCHAR"/>
            <association property="author" javaType="com.example.demo.model.vo.Author">
                <id property="id" column="post_author_id" />
                <result property="username" column="post_author_username"/>
                <result property="email" column="post_author_email"/>
            </association>
            <collection property="comments" ofType="Comment">
                <id property="id" column="comment_id"/>
                <result property="name" column="comment_name"/>
                <result property="text" column="comment_text"/>
            </collection>
            <collection property="tags" ofType="com.example.demo.model.vo.Tag" >
                <id property="id" column="tag_id"/>
                <result property="name" column="tag_name"/>
            </collection>
            <!--<discriminator javaType="int" column="draft">-->
                <!--<case value="1" resultType="DraftPost"/>-->
            <!--</discriminator>-->
        </collection>
    </resultMap>

    <!-- Very Complex Statement -->
    <select id="selectBlogDetails" resultMap="detailedBlogResultMap">
        select
        B.id as blog_id,
        B.title as blog_title,
        B.author_id as blog_author_id,
        A.id as author_id,
        A.username as author_username,
        A.email as author_email,
        P.id as post_id,
        P.blog_id as post_blog_id,
        P.author_id as post_author_id,
        PA.username as post_author_username,
        PA.email as post_author_email,
        P.created_on as post_created_on,
        P.section as post_section,
        P.subject as post_subject,
        P.draft as draft,
        P.body as post_body,
        C.id as comment_id,
        C.post_id as comment_post_id,
        C.name as comment_name,
        C.comment as comment_text,
        T.id as tag_id,
        T.name as tag_name
        from Blog B
        left outer join Author A on B.author_id = A.id
        left outer join Post P on B.id = P.blog_id
        left outer join Author PA on PA.id = P.author_id
        left outer join Comment C on P.id = C.post_id
        left outer join Post_Tag PT on PT.post_id = P.id
        left outer join Tag T on PT.tag_id = T.id
        where B.id = #{id}
    </select>

</mapper>